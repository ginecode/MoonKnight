// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+numpad_subtract",
        "command": "workbench.action.selectTheme"
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "-workbench.action.selectTheme"
    },
    {
        "key": "alt+e",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+s",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+t",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+d",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+d ctrl+d",
        "command": "chatgpt-vscode.newChat"
    },
    {
        "key": "shift+alt+i",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+l",
        "command": "cursorWordEndRight",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "alt+f",
        "command": "cursorWordLeft",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "shift+alt+o",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "shift+alt+u",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "alt+n",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "alt+k",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "alt+i",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${fileDirname}"
        }
    },
    {
        "key": "ctrl+shift+q",
        "command": "workbench.explorer.fileView.focus"
    },
    {
        "key": "ctrl+b ctrl+b",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+oem_comma ctrl+oem_comma",
        "command": "editor.action.showDefinitionPreviewHover"
    },
    {
        "key": "alt+backspace",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+oem_1",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+numpad0",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+numpad_decimal",
        "command": "dart.hotReload",
        "when": "dart-code:isInDartDebugSession && inDebugMode && debugType == 'dart' || dart-code:service.reloadSources && inDebugMode && debugType == 'dart'"
    },
    {
        "key": "ctrl+shift+alt+k",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+i",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+oem_5",
        "command": "workbench.action.focusActivityBar"
    },
    {
        "key": "alt+oem_5",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+y ctrl+y",
        "command": "workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+i",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r ctrl+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+k",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+delete",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+s",
        "command": "deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+backspace",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+backspace",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+,",
        "command": "undo"
    },
    {
        "key": "cmd+z",
        "command": "-undo"
    },
    {
        "key": "cmd+o",
        "command": "workbench.action.files.save"
    },
    {
        "key": "cmd+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "alt+cmd+o",
        "command": "workbench.action.openSettings"
    },
    {
        "key": "cmd+,",
        "command": "-workbench.action.openSettings"
    },
    {
        "key": "shift+cmd+,",
        "command": "redo"
    },
    {
        "key": "shift+cmd+z",
        "command": "-redo"
    },
    {
        "key": "cmd+y",
        "command": "editor.action.clipboardPasteAction"
    },
    {
        "key": "cmd+v",
        "command": "-editor.action.clipboardPasteAction"
    },
    {
        "key": "cmd+[KeyW] cmd+[KeyW]",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+alt+t",
        "command": "deleteLeft",
        "when": "textInputFocus"
    }
]